{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "ebop",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#builtin-types"
		},
		{
			"include": "#keywords-ebop"
		},
		{
			"include": "#keywords-citadle"
		},
		{
			"include": "#function-call"
		},
		{
			"include": "#ocaml"
		}
	],
	"repository": {
		"builtin-types": {
			"patterns": [{
				"name": "support.type.proof",
				"match": "\\b(Expression|Index|Strategy|Extension|Function|Variable|Region|Condition)\\b"
			}]
		},
		"keywords-ebop": {
			"patterns": [{
				"name": "keyword.proof",
				"match": "\\b(Foo|Bar)\\b"
			}]
		},
		"keywords-citadle": {
			"patterns": [{
				"name": "keyword.proof",
				"match": "\\b(Foo2|Bar2)\\b"
			}]
		},
		"comments": {
			"patterns": [{
				"name": "comment.ebop",
				"match": "\\%(.*)"
			}]
		},
		"strings":{
			"patterns": [{
				"name": "string.quoted.double.ebop",
				"begin": "\"",
				"end": "\""}
			]
		},
		"numbers":{
			"patterns": [{
				"name": "constant.numeric.ebop",
				"match": "\\b(0|[1-9][0-9]*)\\b"
			}]
		},
		"function-call":{
			"name": "meta.function-call.ebop",
			"comment": "Regular function call of the type \"name(args)\"",
			"begin": "(?x)\n  \\b(?=\n    ([[:alpha:]_]\\w*) \\s* (\\()\n  )\n",
			"end": "(\\))",
			"endCaptures": {
				"1": {
					"name": "punctuation.definition.arguments.end.ebop"
				}
			},
			"patterns": [{
							"include": "#function-arguments"
						},
						{
							"include": "#function-name"
						}
						]
		},
		"function-name": {
			"patterns": [
				{
					"comment": "récupéré dans le fichier ebop",
					"name": "entity.name.function.ebop",
					"match": "(?x)\n  \\b ([[:alpha:]_]\\w*) \\b\n"
				}
			]
		},
		"function-arguments": {
			"comment" : "récupéré dans le fichier python vscode",
			"begin": "(\\()",
			"end": "(?=\\))(?!\\)\\s*\\()",
			"beginCaptures": {
				"1": {
					"name": "punctuation.definition.arguments.begin.ebop"
				}
			},
			"contentName": "punctuation.separator.arguments.ebop",
			"patterns": [
				{
					"include": "#builtin-types"
				},
				{
					"include": "#function-call"
				},
				{
					"include": "#keywords-ebop"
				},
				{
					"include": "#keywords-citadle"
				},
				{
					"include": "#strings"
				},
				{
					"include": "#numbers"
				},
				{
					"include": "#comments"
				},
				{
					"name": "meta.separator.ebop",
					"match": "(,)"
				},
				{
					"match": "([a-zA-Z0-9]|'|_)+",
					"name": "variable.parameter.ebop"
				}
			]
		},
		"ocaml": {
			"patterns": [{
				"name": "meta.embedded.block.ocaml",
				"begin": "<\\\\OCaml>",
				"end": "</OCaml>",
				"beginCaptures": {
					"0": { "name": "keyword.control.import.ebop" }
				  },
				"endCaptures": {
					"0": { "name": "keyword.control.import" }
				  },
				"patterns":[{
					"include": "source.ocaml"
				}]
			}]
		}
	},
	"scopeName": "source.proof"
}